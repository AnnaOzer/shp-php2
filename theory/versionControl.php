<?php

/*
Системы контроля версий:
CVS - устарела
SVN - еще используется
Git - наиболее современная

Умеют:
- получить код
- зафиксировать изменение
- обмен изменениями

Порядок работы с github

0. предполагается что гит уже установлен, msysgit ставить на windows
1. зайти на github.com, создать новый репозиторий, галочка initialize
2. в новом репозитории clone repository - скопировать url
3. в папке где сервер/домены запустить командную строчку гита, написать в ней
чтобы скопировать репозиторий из гитхаба сюда в папку, скажем, тест
git clone [адрес репозитория на гитхабе] ./test
4. открыть проект в phpStorm и работать
5. зафиксировать изменения в системе контроля версий гит

Вариант 1: через командную строку
изнутри папки проекта тест запустить командную строчку гита
набрать git status
команда скажет, что есть файлы, не добавленные в систему контроля версий, например index.php
git add index.php
git status
команда скажет, что есть изменения, которые можно зафиксировать
git commit -m "First commit"
команда зафиксирует изменения c неким сообщением для коммита, которое потом можно увидеть в истории
git status
увидели изменения
git push
изменения, зафиксированные локально отправляет на гитхаб
просит имя и пароль на гитхабе
на гитхабе обновить страничку проекта и увидеть изменения

Вариант 2: из phpStorm
[предполагается, что в Шторм уже ввели имя и пароль от гитхаба]
[предполагается, что через командную строкау уже склонирован репозиторий первый раз]
file -> settings -> Version Control
здесь определяется, какие папки под системой контроля версий
на красном форне увидеть, что есть незарегистрированный корень под управлением гита
нажать добавить, окей
изменим файл index.php
правой кнопкой на проект -> git -> commit directory
вписать в поле сообщение коммита
выбрать кнопку commit and push

6. пригласить кого-то поработать над проектом
дать ссылку, которая лежит под https clone url
в settings/настройках своего репозитория на гитхабе разрешить ему доступ

7. еще гит умеет
быстро откатиться на какой-то момент в истории
отменить какой-то коммит, вообще удалить из истории
сделать ветку, сделать две ветки разработки: основная и экспериментальная
когда экспериментальную доведете до ума - слить её в основную ветку
правой кнопкой по проекту git->show history и увидеть историю изменений

Алтернативы  гитхабу
битбакет

8.
push Отправка своих изменений
pull Применить чужие изменения

 * */
